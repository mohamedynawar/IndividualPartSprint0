Git <https://git-scm.com/> --everything-is-local

  * About <https://git-scm.com/about>
      o Branching and Merging <https://git-scm.com/about>
      o Small and Fast <https://git-scm.com/about/small-and-fast>
      o Distributed <https://git-scm.com/about/distributed>
      o Data Assurance <https://git-scm.com/about/info-assurance>
      o Staging Area <https://git-scm.com/about/staging-area>
      o Free and Open Source
        <https://git-scm.com/about/free-and-open-source>
      o Trademark <https://git-scm.com/about/trademark>
  * Documentation <https://git-scm.com/doc>
      o Reference <https://git-scm.com/docs>
      o Book <https://git-scm.com/book>
      o Videos <https://git-scm.com/videos>
      o External Links <https://git-scm.com/doc/ext>
  * Downloads <https://git-scm.com/downloads>
      o GUI Clients <https://git-scm.com/downloads/guis>
      o Logos <https://git-scm.com/downloads/logos>
  * Community <https://git-scm.com/community>

------------------------------------------------------------------------

This book is available in English <https://git-scm.com/book/en>.

Full translation available in Deutsch <https://git-scm.com/book/de>, 简
体中文 <https://git-scm.com/book/zh>, 繁體中文
<https://git-scm.com/book/zh-tw>, Français
<https://git-scm.com/book/fr/v2>, 日本語 <https://git-scm.com/book/ja>,
Nederlands <https://git-scm.com/book/nl>, Русский
<https://git-scm.com/book/ru>, 한국어 <https://git-scm.com/book/ko>,
Português (Brasil) <https://git-scm.com/book/pt-br> and Čeština
<https://git-scm.com/book/cs>.

Partial translations available in Arabic <https://git-scm.com/book/ar>,
Español <https://git-scm.com/book/es>, Indonesian
<https://git-scm.com/book/id>, Italiano <https://git-scm.com/book/it>,
Suomi <https://git-scm.com/book/fi>, Македонски
<https://git-scm.com/book/mk>, Ελληνικά <https://git-scm.com/book/gr>,
Polski <https://git-scm.com/book/pl> and Türkçe
<https://git-scm.com/book/tr>.

Translations started for Azərbaycan dili <https://git-scm.com/book/az>,
Беларуская <https://git-scm.com/book/be>, Català
<https://git-scm.com/book/ca>, Esperanto <https://git-scm.com/book/eo>,
Español (Nicaragua) <https://git-scm.com/book/es-ni>, فارسی
<https://git-scm.com/book/fa>, हिन्दी <https://git-scm.com/book/hi>,
Magyar <https://git-scm.com/book/hu>, Norwegian Bokmål
<https://git-scm.com/book/no-nb>, Polski <https://git-scm.com/book/pl>,
Română <https://git-scm.com/book/ro>, Српски
<https://git-scm.com/book/sr>, ภาษาไทย <https://git-scm.com/book/th>,
Tagalog <https://git-scm.com/book/tl>, Tiếng Việt
<https://git-scm.com/book/vi>, Українська <https://git-scm.com/book/uk>
and Ўзбекча <https://git-scm.com/book/uz/v2>.

------------------------------------------------------------------------

The source of this book is hosted on GitHub.
<https://github.com/progit/progit2>
Patches, suggestions and comments are welcome.

Chapters ▾ <#>

 1.


        1. Getting Started
        <https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control>

     1. 1.1 About Version Control
        <https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control>

     2. 1.2 A Short History of Git
        <https://git-scm.com/book/en/v2/Getting-Started-A-Short-History-of-Git>

     3. 1.3 Git Basics
        <https://git-scm.com/book/en/v2/Getting-Started-Git-Basics>
     4. 1.4 The Command Line
        <https://git-scm.com/book/en/v2/Getting-Started-The-Command-Line>
     5. 1.5 Installing Git
        <https://git-scm.com/book/en/v2/Getting-Started-Installing-Git>
     6. 1.6 First-Time Git Setup
        <https://git-scm.com/book/en/v2/Getting-Started-First-Time-Git-Setup>

     7. 1.7 Getting Help
        <https://git-scm.com/book/en/v2/Getting-Started-Getting-Help>
     8. 1.8 Summary
        <https://git-scm.com/book/en/v2/Getting-Started-Summary>
 2.


        2. Git Basics
        <https://git-scm.com/book/en/v2/Git-Basics-Getting-a-Git-Repository>

     1. 2.1 Getting a Git Repository
        <https://git-scm.com/book/en/v2/Git-Basics-Getting-a-Git-Repository>

     2. 2.2 Recording Changes to the Repository
        <https://git-scm.com/book/en/v2/Git-Basics-Recording-Changes-to-the-Repository>

     3. 2.3 Viewing the Commit History
        <https://git-scm.com/book/en/v2/Git-Basics-Viewing-the-Commit-History>

     4. 2.4 Undoing Things
        <https://git-scm.com/book/en/v2/Git-Basics-Undoing-Things>
     5. 2.5 Working with Remotes
        <https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes>
     6. 2.6 Tagging <https://git-scm.com/book/en/v2/Git-Basics-Tagging>
     7. 2.7 Git Aliases
        <https://git-scm.com/book/en/v2/Git-Basics-Git-Aliases>
     8. 2.8 Summary <https://git-scm.com/book/en/v2/Git-Basics-Summary>
 3.


        3. Git Branching
        <https://git-scm.com/book/en/v2/Git-Branching-Branches-in-a-Nutshell>

     1. 3.1 Branches in a Nutshell
        <https://git-scm.com/book/en/v2/Git-Branching-Branches-in-a-Nutshell>

     2. 3.2 Basic Branching and Merging
        <https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging>

     3. 3.3 Branch Management
        <https://git-scm.com/book/en/v2/Git-Branching-Branch-Management>
     4. 3.4 Branching Workflows
        <https://git-scm.com/book/en/v2/Git-Branching-Branching-Workflows>
     5. 3.5 Remote Branches
        <https://git-scm.com/book/en/v2/Git-Branching-Remote-Branches>
     6. 3.6 Rebasing
        <https://git-scm.com/book/en/v2/Git-Branching-Rebasing>
     7. 3.7 Summary <https://git-scm.com/book/en/v2/Git-Branching-Summary>
 4.


        4. Git on the Server
        <https://git-scm.com/book/en/v2/Git-on-the-Server-The-Protocols>

     1. 4.1 The Protocols
        <https://git-scm.com/book/en/v2/Git-on-the-Server-The-Protocols>
     2. 4.2 Getting Git on a Server
        <https://git-scm.com/book/en/v2/Git-on-the-Server-Getting-Git-on-a-Server>

     3. 4.3 Generating Your SSH Public Key
        <https://git-scm.com/book/en/v2/Git-on-the-Server-Generating-Your-SSH-Public-Key>

     4. 4.4 Setting Up the Server
        <https://git-scm.com/book/en/v2/Git-on-the-Server-Setting-Up-the-Server>

     5. 4.5 Git Daemon
        <https://git-scm.com/book/en/v2/Git-on-the-Server-Git-Daemon>
     6. 4.6 Smart HTTP
        <https://git-scm.com/book/en/v2/Git-on-the-Server-Smart-HTTP>
     7. 4.7 GitWeb
        <https://git-scm.com/book/en/v2/Git-on-the-Server-GitWeb>
     8. 4.8 GitLab
        <https://git-scm.com/book/en/v2/Git-on-the-Server-GitLab>
     9. 4.9 Third Party Hosted Options
        <https://git-scm.com/book/en/v2/Git-on-the-Server-Third-Party-Hosted-Options>

    10. 4.10 Summary
        <https://git-scm.com/book/en/v2/Git-on-the-Server-Summary>
 5.


        5. Distributed Git
        <https://git-scm.com/book/en/v2/Distributed-Git-Distributed-Workflows>

     1. 5.1 Distributed Workflows
        <https://git-scm.com/book/en/v2/Distributed-Git-Distributed-Workflows>

     2. 5.2 Contributing to a Project
        <https://git-scm.com/book/en/v2/Distributed-Git-Contributing-to-a-Project>

     3. 5.3 Maintaining a Project
        <https://git-scm.com/book/en/v2/Distributed-Git-Maintaining-a-Project>

     4. 5.4 Summary
        <https://git-scm.com/book/en/v2/Distributed-Git-Summary>

 1.


        6. GitHub
        <https://git-scm.com/book/en/v2/GitHub-Account-Setup-and-Configuration>

     1. 6.1 Account Setup and Configuration
        <https://git-scm.com/book/en/v2/GitHub-Account-Setup-and-Configuration>

     2. 6.2 Contributing to a Project
        <https://git-scm.com/book/en/v2/GitHub-Contributing-to-a-Project>
     3. 6.3 Maintaining a Project
        <https://git-scm.com/book/en/v2/GitHub-Maintaining-a-Project>
     4. 6.4 Managing an organization
        <https://git-scm.com/book/en/v2/GitHub-Managing-an-organization>
     5. 6.5 Scripting GitHub
        <https://git-scm.com/book/en/v2/GitHub-Scripting-GitHub>
     6. 6.6 Summary <https://git-scm.com/book/en/v2/GitHub-Summary>
 2.


        7. Git Tools
        <https://git-scm.com/book/en/v2/Git-Tools-Revision-Selection>

     1. 7.1 Revision Selection
        <https://git-scm.com/book/en/v2/Git-Tools-Revision-Selection>
     2. 7.2 Interactive Staging
        <https://git-scm.com/book/en/v2/Git-Tools-Interactive-Staging>
     3. 7.3 Stashing and Cleaning
        <https://git-scm.com/book/en/v2/Git-Tools-Stashing-and-Cleaning>
     4. 7.4 Signing Your Work
        <https://git-scm.com/book/en/v2/Git-Tools-Signing-Your-Work>
     5. 7.5 Searching <https://git-scm.com/book/en/v2/Git-Tools-Searching>
     6. 7.6 Rewriting History
        <https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History>
     7. 7.7 Reset Demystified
        <https://git-scm.com/book/en/v2/Git-Tools-Reset-Demystified>
     8. 7.8 Advanced Merging
        <https://git-scm.com/book/en/v2/Git-Tools-Advanced-Merging>
     9. 7.9 Rerere <https://git-scm.com/book/en/v2/Git-Tools-Rerere>
    10. 7.10 Debugging with Git
        <https://git-scm.com/book/en/v2/Git-Tools-Debugging-with-Git>
    11. 7.11 Submodules
        <https://git-scm.com/book/en/v2/Git-Tools-Submodules>
    12. 7.12 Bundling <https://git-scm.com/book/en/v2/Git-Tools-Bundling>
    13. 7.13 Replace <https://git-scm.com/book/en/v2/Git-Tools-Replace>
    14. 7.14 Credential Storage
        <https://git-scm.com/book/en/v2/Git-Tools-Credential-Storage>
    15. 7.15 Summary <https://git-scm.com/book/en/v2/Git-Tools-Summary>
 3.


        8. Customizing Git
        <https://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration>

     1. 8.1 Git Configuration
        <https://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration>
     2. 8.2 Git Attributes
        <https://git-scm.com/book/en/v2/Customizing-Git-Git-Attributes>
     3. 8.3 Git Hooks
        <https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks>
     4. 8.4 An Example Git-Enforced Policy
        <https://git-scm.com/book/en/v2/Customizing-Git-An-Example-Git-Enforced-Policy>

     5. 8.5 Summary
        <https://git-scm.com/book/en/v2/Customizing-Git-Summary>
 4.


        9. Git and Other Systems
        <https://git-scm.com/book/en/v2/Git-and-Other-Systems-Git-as-a-Client>

     1. 9.1 Git as a Client
        <https://git-scm.com/book/en/v2/Git-and-Other-Systems-Git-as-a-Client>

     2. 9.2 Migrating to Git
        <https://git-scm.com/book/en/v2/Git-and-Other-Systems-Migrating-to-Git>

     3. 9.3 Summary
        <https://git-scm.com/book/en/v2/Git-and-Other-Systems-Summary>
 5.


        10. Git Internals
        <https://git-scm.com/book/en/v2/Git-Internals-Plumbing-and-Porcelain>

     1. 10.1 Plumbing and Porcelain
        <https://git-scm.com/book/en/v2/Git-Internals-Plumbing-and-Porcelain>

     2. 10.2 Git Objects
        <https://git-scm.com/book/en/v2/Git-Internals-Git-Objects>
     3. 10.3 Git References
        <https://git-scm.com/book/en/v2/Git-Internals-Git-References>
     4. 10.4 Packfiles
        <https://git-scm.com/book/en/v2/Git-Internals-Packfiles>
     5. 10.5 The Refspec
        <https://git-scm.com/book/en/v2/Git-Internals-The-Refspec>
     6. 10.6 Transfer Protocols
        <https://git-scm.com/book/en/v2/Git-Internals-Transfer-Protocols>
     7. 10.7 Maintenance and Data Recovery
        <https://git-scm.com/book/en/v2/Git-Internals-Maintenance-and-Data-Recovery>

     8. 10.8 Environment Variables
        <https://git-scm.com/book/en/v2/Git-Internals-Environment-Variables>

     9. 10.9 Summary <https://git-scm.com/book/en/v2/Git-Internals-Summary>
    10. 10.10 Moving Files
        <https://git-scm.com/book/en/v2/Git-Internals-Moving-Files>

 1.


        A1. Appendix A: Git in Other Environments
        <https://git-scm.com/book/en/v2/Appendix-A%3A-Git-in-Other-Environments-Graphical-Interfaces>

     1. A1.1 Graphical Interfaces
        <https://git-scm.com/book/en/v2/Appendix-A%3A-Git-in-Other-Environments-Graphical-Interfaces>

     2. A1.2 Git in Visual Studio
        <https://git-scm.com/book/en/v2/Appendix-A%3A-Git-in-Other-Environments-Git-in-Visual-Studio>

     3. A1.3 Git in Eclipse
        <https://git-scm.com/book/en/v2/Appendix-A%3A-Git-in-Other-Environments-Git-in-Eclipse>

     4. A1.4 Git in Bash
        <https://git-scm.com/book/en/v2/Appendix-A%3A-Git-in-Other-Environments-Git-in-Bash>

     5. A1.5 Git in Zsh
        <https://git-scm.com/book/en/v2/Appendix-A%3A-Git-in-Other-Environments-Git-in-Zsh>

     6. A1.6 Git in Powershell
        <https://git-scm.com/book/en/v2/Appendix-A%3A-Git-in-Other-Environments-Git-in-Powershell>

     7. A1.7 Summary
        <https://git-scm.com/book/en/v2/Appendix-A%3A-Git-in-Other-Environments-Summary>

 2.


        A2. Appendix B: Embedding Git in your Applications
        <https://git-scm.com/book/en/v2/Appendix-B%3A-Embedding-Git-in-your-Applications-Command-line-Git>

     1. A2.1 Command-line Git
        <https://git-scm.com/book/en/v2/Appendix-B%3A-Embedding-Git-in-your-Applications-Command-line-Git>

     2. A2.2 Libgit2
        <https://git-scm.com/book/en/v2/Appendix-B%3A-Embedding-Git-in-your-Applications-Libgit2>

     3. A2.3 JGit
        <https://git-scm.com/book/en/v2/Appendix-B%3A-Embedding-Git-in-your-Applications-JGit>

 3.


        A3. Appendix C: Git Commands
        <https://git-scm.com/book/en/v2/Appendix-C%3A-Git-Commands-Setup-and-Config>

     1. A3.1 Setup and Config
        <https://git-scm.com/book/en/v2/Appendix-C%3A-Git-Commands-Setup-and-Config>

     2. A3.2 Getting and Creating Projects
        <https://git-scm.com/book/en/v2/Appendix-C%3A-Git-Commands-Getting-and-Creating-Projects>

     3. A3.3 Basic Snapshotting
        <https://git-scm.com/book/en/v2/Appendix-C%3A-Git-Commands-Basic-Snapshotting>

     4. A3.4 Branching and Merging
        <https://git-scm.com/book/en/v2/Appendix-C%3A-Git-Commands-Branching-and-Merging>

     5. A3.5 Sharing and Updating Projects
        <https://git-scm.com/book/en/v2/Appendix-C%3A-Git-Commands-Sharing-and-Updating-Projects>

     6. A3.6 Inspection and Comparison
        <https://git-scm.com/book/en/v2/Appendix-C%3A-Git-Commands-Inspection-and-Comparison>

     7. A3.7 Debugging
        <https://git-scm.com/book/en/v2/Appendix-C%3A-Git-Commands-Debugging>

     8. A3.8 Patching
        <https://git-scm.com/book/en/v2/Appendix-C%3A-Git-Commands-Patching>

     9. A3.9 Email
        <https://git-scm.com/book/en/v2/Appendix-C%3A-Git-Commands-Email>
    10. A3.10 External Systems
        <https://git-scm.com/book/en/v2/Appendix-C%3A-Git-Commands-External-Systems>

    11. A3.11 Administration
        <https://git-scm.com/book/en/v2/Appendix-C%3A-Git-Commands-Administration>

    12. A3.12 Plumbing Commands
        <https://git-scm.com/book/en/v2/Appendix-C%3A-Git-Commands-Plumbing-Commands>


2nd Edition


  1.1 Getting Started - About Version Control

This chapter will be about getting started with Git. We will begin by
explaining some background on version control tools, then move on to how
to get Git running on your system and finally how to get it set up to
start working with. At the end of this chapter you should understand why
Git is around, why you should use it and you should be all set up to do so.


    About Version Control

What is “version control”, and why should you care? Version control is a
system that records changes to a file or set of files over time so that
you can recall specific versions later. For the examples in this book,
you will use software source code as the files being version controlled,
though in reality you can do this with nearly any type of file on a
computer.

If you are a graphic or web designer and want to keep every version of
an image or layout (which you would most certainly want to), a Version
Control System (VCS) is a very wise thing to use. It allows you to
revert selected files back to a previous state, revert the entire
project back to a previous state, compare changes over time, see who
last modified something that might be causing a problem, who introduced
an issue and when, and more. Using a VCS also generally means that if
you screw things up or lose files, you can easily recover. In addition,
you get all this for very little overhead.


      Local Version Control Systems

Many people’s version-control method of choice is to copy files into
another directory (perhaps a time-stamped directory, if they’re clever).
This approach is very common because it is so simple, but it is also
incredibly error prone. It is easy to forget which directory you’re in
and accidentally write to the wrong file or copy over files you don’t
mean to.

To deal with this issue, programmers long ago developed local VCSs that
had a simple database that kept all the changes to files under revision
control.

Local version control diagram
Figure 1. Local version control.

One of the more popular VCS tools was a system called RCS, which is
still distributed with many computers today. RCS works by keeping patch
sets (that is, the differences between files) in a special format on
disk; it can then re-create what any file looked like at any point in
time by adding up all the patches.


      Centralized Version Control Systems

The next major issue that people encounter is that they need to
collaborate with developers on other systems. To deal with this problem,
Centralized Version Control Systems (CVCSs) were developed. These
systems, such as CVS, Subversion, and Perforce, have a single server
that contains all the versioned files, and a number of clients that
check out files from that central place. For many years, this has been
the standard for version control.

Centralized version control diagram
Figure 2. Centralized version control.

This setup offers many advantages, especially over local VCSs. For
example, everyone knows to a certain degree what everyone else on the
project is doing. Administrators have fine-grained control over who can
do what, and it’s far easier to administer a CVCS than it is to deal
with local databases on every client.

However, this setup also has some serious downsides. The most obvious is
the single point of failure that the centralized server represents. If
that server goes down for an hour, then during that hour nobody can
collaborate at all or save versioned changes to anything they’re working
on. If the hard disk the central database is on becomes corrupted, and
proper backups haven’t been kept, you lose absolutely everything — the
entire history of the project except whatever single snapshots people
happen to have on their local machines. Local VCS systems suffer from
this same problem — whenever you have the entire history of the project
in a single place, you risk losing everything.


      Distributed Version Control Systems

This is where Distributed Version Control Systems (DVCSs) step in. In a
DVCS (such as Git, Mercurial, Bazaar or Darcs), clients don’t just check
out the latest snapshot of the files; rather, they fully mirror the
repository, including its full history. Thus, if any server dies, and
these systems were collaborating via that server, any of the client
repositories can be copied back up to the server to restore it. Every
clone is really a full backup of all the data.

Distributed version control diagram
Figure 3. Distributed version control.

Furthermore, many of these systems deal pretty well with having several
remote repositories they can work with, so you can collaborate with
different groups of people in different ways simultaneously within the
same project. This allows you to set up several types of workflows that
aren’t possible in centralized systems, such as hierarchical models.

prev <https://git-scm.com/book> | next
<https://git-scm.com/book/en/v2/Getting-Started-A-Short-History-of-Git>
This open sourced
<https://github.com/git/git-scm.com/blob/master/README.md#license> site
is hosted on GitHub. <https://github.com/git/git-scm.com>
Patches, suggestions and comments are welcome.
Git is a member of Software Freedom Conservancy <https://git-scm.com/sfc>

